# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: plex
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 105, 10000]
      runtimeClassName: nvidia
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.32.7.7621-871adbd44@sha256:f9f77dc5e17cab9fae5ece663a64d026e3c75142b3b60bb4a52bf061957412be
            env:
              TZ: "${TIMEZONE}"
            resources:
              requests:
                nvidia.com/gpu: 1
                cpu: 100m
                memory: 2Gi
              limits:
                nvidia.com/gpu: 1
                memory: 10Gi
        statefulset:
          volumeClaimTemplates:
          - name: config
            accessMode: ReadWriteOnce
            size: 100Gi
            storageClass: local-hostpath
            globalMounts:
            - path: /config
    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: true
        className: internal
        hosts:
        - host: &host "plex.vanillax.me"
          paths:
          - path: /
            service:
              name: main
              port: http
        tls:
        - hosts:
          - *host
    persistence:
      transcode:
        type: emptyDir
        globalMounts:
        - path: /transcode
      media:
        enabled: true
        existingClaim: jellyfin-nfs
        globalMounts:
        - path: /media
    # persistence:
    #   transcode:
    #     type: emptyDir
    #   media:
    #     type: nfs
    #     server: ${TRUENAS_IP}
    #     path: /mnt/tank/Media
    #     globalMounts:
    #       - path: /media
