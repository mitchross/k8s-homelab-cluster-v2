---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: scrypted
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    controller:
      type: statefulset

    image:
      repository: ghcr.io/koush/scrypted
      tag: 18-bullseye-full-v0.23.0

    podAnnotations:
      k8s.v1.cni.cncf.io/networks: |
        [{
          "name":"multus-trusted",
          "namespace": "networking",
          "ips": ["192.168.10.52/24"]
        }]

    env:
      TZ: ${TZ}

    service:
      main:
        annotations:
          io.cilium/lb-ipam-ips: *loadBalancerIP
        type: LoadBalancer

        ports:
          http:
            port: &web-port 11080


    ingress:
      main:
        enabled: true
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:cctv"
        className: internal
        hosts:
          - host: &host "scrypted.vanillax.me"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    securityContext:
      privileged: true

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: [44, 109]

    persistence:
      cache:
        enabled: true
        mountPath: /.npm
        type: emptyDir

    volumeClaimTemplates:
      - name: config
        mountPath: /server/volume
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: longhorn

    nodeSelector:
      node-role.kubernetes.io/worker: "true"
      intel.feature.node.kubernetes.io/gpu: "true"

    resources:
      requests:
        gpu.intel.com/i915: 1
        cpu: 10m
        memory: 250Mi
      limits:
        gpu.intel.com/i915: 1
        memory: 8192Mi