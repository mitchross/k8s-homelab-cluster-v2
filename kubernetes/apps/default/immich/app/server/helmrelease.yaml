---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app immich-server
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: immich-typesense
      namespace: default
    - name: redis
      namespace: database
  values:
    controllers:
      main:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          configmap.reloader.stakater.com/reload: &configMap immich-configmap
          secret.reloader.stakater.com/reload: &secret immich-secret
    
        initContainers:
          init-db:
            image:
              repository: ghcr.io/haraldkoch/postgres-init
              tag: 16.1@sha256:0412b8a443c0c6c7e8f7463c789fb1fe8ec632c8b6a68ddfe55cfb15d822083d
            envFrom: &envFrom
              - configMapRef:
                  name: *configMap
              - secretRef:
                  name: *secret
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.91.0
            args: ["start-server.sh"]
            envFrom: *envFrom
            resources:
              requests:
                cpu: 100m
                memory: 250Mi
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
    service:
      main:
        annotations:
              io.cilium/lb-ipam-ips: 192.168.1.18
        ports:
          http:
            port: 3001
        type: LoadBalancer

    ingress:
      main:
        enabled: true
        ingressClassName: "internal"
        annotations:
          hajimari.io/icon: heroicons:photo
          hajimari.io/name: Immich

          external-dns.alpha.kubernetes.io/target: photos.vanillax.me
          nginx.ingress.kubernetes.io/configuration-snippet: |
            
            set $forwarded_client_ip "";
            if ($http_x_forwarded_for ~ "^([^,]+)") {
              set $forwarded_client_ip $1;
            }
            set $client_ip $remote_addr;
            if ($forwarded_client_ip != "") {
              set $client_ip $forwarded_client_ip;
            }
          nignx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/upstream-hash-by: "$client_ip"

        hosts:
          - host: &host photos.vanillax.me
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host


    persistence:
      library:
        enabled: true
        type: nfs
        server: "192.168.1.133"
        path: /mnt/largetank/k8s/immich
        globalMounts:
          - path: /usr/src/app/upload